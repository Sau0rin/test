// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(appContext))]
    [Migration("20230327182600_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Clinics", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("adres")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("foto")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("name");

                    b.ToTable("clinics");
                });

            modelBuilder.Entity("WebApi.Doctors", b =>
                {
                    b.Property<string>("FIO")
                        .HasColumnType("text");

                    b.Property<string>("clinic")
                        .HasColumnType("text");

                    b.Property<string>("foto")
                        .HasColumnType("text");

                    b.Property<string>("fullInfo")
                        .HasColumnType("text");

                    b.Property<string>("litleInfo")
                        .HasColumnType("text");

                    b.Property<string>("specializations")
                        .HasColumnType("text");

                    b.HasKey("FIO");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("WebApi.Users", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.HasKey("login", "password");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApi.anketa", b =>
                {
                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.Property<string>("adres")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("fio")
                        .HasColumnType("text");

                    b.Property<string>("house")
                        .HasColumnType("text");

                    b.Property<string>("oms")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("pol")
                        .HasColumnType("text");

                    b.Property<string>("polisnumber")
                        .HasColumnType("text");

                    b.Property<string>("region")
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .HasColumnType("text");

                    b.HasKey("userName");

                    b.ToTable("anketa");
                });

            modelBuilder.Entity("WebApi.records", b =>
                {
                    b.Property<string>("fio")
                        .HasColumnType("text");

                    b.Property<string>("adres")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("doctorname")
                        .HasColumnType("text");

                    b.Property<string>("house")
                        .HasColumnType("text");

                    b.Property<string>("oms")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("pol")
                        .HasColumnType("text");

                    b.Property<string>("polisnumber")
                        .HasColumnType("text");

                    b.Property<string>("region")
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .HasColumnType("text");

                    b.HasKey("fio");

                    b.ToTable("records");
                });

            modelBuilder.Entity("WebApi.specializations", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.HasKey("name");

                    b.ToTable("specializations");
                });
#pragma warning restore 612, 618
        }
    }
}
